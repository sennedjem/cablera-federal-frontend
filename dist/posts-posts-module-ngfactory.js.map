{"version":3,"sources":["webpack:///./src/app/layout/posts/posts-routing.module.ts","webpack:///./src/app/layout/posts/posts.component.html","webpack:///./src/app/layout/posts/posts.component.ts","webpack:///./src/app/layout/posts/posts.module.ts"],"names":[],"mappings":"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","file":"posts-posts-module-ngfactory.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PostsComponent } from './posts.component';\nimport { TableModule } from 'ngx-easy-table';\nimport { PostsGetAllResolver } from '../../shared/resolves/posts-get-all-resolver'\n\nconst routes: Routes = [\n    {\n        path: '', component: PostsComponent, resolve: {posts : PostsGetAllResolver}\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [\n    \tRouterModule,\n        TableModule\n    ],\n    providers: [PostsGetAllResolver]\n})\nexport class PostsRoutingModule {\n}\n","<div class=\"col-md-12\" [@routerTransition]>\n\n  <h2 class=\"title\"> {{ 'layout.posts' | translate }}</h2>\n\n    <div class=\"row\">\n        <div class=\"col-xl-12 col-lg-12\">\n            <div class=\"row justify-content-md-center\">\n                <pagination-controls \n                    (pageChange)=\"pageChange($event)\"\n                    responsive=\"true\"\n                    previousLabel=\"{{ 'layout.previous' | translate}}\"\n                    nextLabel=\"{{ 'layout.next' | translate}}\"\n                ></pagination-controls>\n            </div>\n        </div>\n\n        <div class=\"col-xl-6 col-lg-6\" \n            *ngFor=\"let d of data | paginate: { \n                itemsPerPage: perPage, \n                currentPage: page,\n                totalItems: count \n            }\">\n            <app-stat \n                [icon]=\"'fa-image'\"\n                [id]=\"d.id\" \n                [image]=\"d.image\"\n                [title]=\"d.title\"\n                [content]=\"formatContent(d.content)\" \n                [url]=\"d.url\"\n                [tags]=\"d.tags\" \n                [publicationDate]=\"d.creation_date\"\n                [site]=\"d.site\">\n            </app-stat>\n        </div>\n\n        <div class=\"col-xl-12 col-lg-12\">\n            <div class=\"row justify-content-md-center\">\n                <pagination-controls \n                    (pageChange)=\"pageChange($event)\"\n                    responsive=\"true\"\n                    previousLabel=\"{{ 'layout.previous' | translate}}\"\n                    nextLabel=\"{{ 'layout.next' | translate}}\"\n                ></pagination-controls>\n            </div>\n        </div>\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { routerTransition } from '../../router.animations';\nimport { Router,ActivatedRoute } from '@angular/router';\nimport { Post } from '../../shared/models';\nimport { PostsService } from '../../shared/services/posts/posts.service';\n\n@Component({\n    selector: 'app-posts',\n    templateUrl: './posts.component.html',\n    styleUrls: ['./posts.component.scss'],\n    animations: [routerTransition()]\n})\nexport class PostsComponent implements OnInit {\n\n   data : Post[];\n   count: number;\n   perPage: number;\n   page: number;\n\n  constructor(\n    private route: Router,\n    private actRoute: ActivatedRoute,\n    private postsService: PostsService\n  ) {\n  }\n\n  ngOnInit() {\n    this.actRoute.data.subscribe((data) => {\n      this.data = data.posts.data,\n      this.count = data.posts.total,\n      this.perPage = data.posts.per_page,\n      this.page = data.posts.current_page\n    });\n\n    this.data.map(function(post) {\n      return formatPost(post)\n    });\n\n    function formatPost(post){\n      post.tags = post.tags.map(function(tag) {return tag.description});\n      return post\n    }\n  }\n\n  formatContent(content){\n    return content + '...';\n  }\n\n  pageChange(newPage){\n    this.page = newPage\n    \n    this.route.navigate([], {\n      queryParams: {\n        page: newPage\n      }\n    });\n\n    this.postsService.getPosts(\"\" + this.page).subscribe(\n      data => this.data = data['data']\n    );\n\n    window.scrollTo(0, 0);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TagInputModule } from 'ngx-chips';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { PostsRoutingModule } from './posts-routing.module';\nimport { PostsComponent } from './posts.component';\nimport { NgxSmartModalModule } from 'ngx-smart-modal';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { StatModule } from '../../shared';\n\n@NgModule({\n    imports: [\n    \tCommonModule, \n    \tPostsRoutingModule,\n    \tTagInputModule,\n    \tFormsModule,\n\t\tReactiveFormsModule,\n\t\tNgxPaginationModule,\n    \tNgxSmartModalModule.forRoot(),\n\t\tTranslateModule,\n\t\tStatModule\n    ],\n    declarations: [PostsComponent],\n    bootstrap: [PostsComponent]\n})\nexport class PostsModule {}\n"],"sourceRoot":""}