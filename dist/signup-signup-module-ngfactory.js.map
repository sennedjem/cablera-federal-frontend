{"version":3,"sources":["webpack:///./src/app/signup/signup-routing.module.ts","webpack:///./src/app/signup/signup.component.html","webpack:///./src/app/signup/signup.component.ts","webpack:///./src/app/signup/signup.module.ts"],"names":[],"mappings":"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","file":"signup-signup-module-ngfactory.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SignupComponent } from './signup.component';\nimport { FormsModule }   from '@angular/forms';\n\nconst routes: Routes = [\n    {\n        path: '', component: SignupComponent\n    }\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes)\n    ],\n    exports: [\n        RouterModule,\n        FormsModule\n    ]\n})\nexport class SignupRoutingModule {}","<div class=\"login-page\" [@routerTransition]>\n    <div class=\"row justify-content-md-center\">\n        <div class=\"col-md-4\">\n            <img src=\"assets/images/logo.png\" width=\"150px\" />\n            <h1>Cablera Federal</h1>\n            <form (ngSubmit)=\"onSingup(singupForm);\" #singupForm=\"ngForm\">\n                <div class=\"form-content\">\n                    <div class=\"form-group\">\n                        <input type=\"text\" \n                               class=\"form-control input-underline input-lg\"\n                               id=\"fullname\" name=\"fullname\"\n                               placeholder=\"Full name\"\n                               [(ngModel)]=\"user.name\" required>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <input type=\"text\" \n                               class=\"form-control input-underline input-lg\" \n                               id=\"email\" name=\"email\" \n                               (focus)=\"failSignup = false\"\n                               placeholder=\"Email\"\n                               [(ngModel)]=\"user.email\" required>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <input type=\"password\" \n                               class=\"form-control input-underline input-lg\" \n                               id=\"password\" name=\"password\"\n                               placeholder=\"Password\"\n                               [(ngModel)]=\"user.password\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <input type=\"password\" \n                               class=\"form-control input-underline input-lg\" \n                               id=\"repeatPassword\" name=\"repeatPassword\"\n                               placeholder=\"Repeat password\" required>\n                    </div>\n                </div>\n                <button type=\"submit\" class=\"btn rounded-btn\" [disabled]=\"!singupForm.form.valid\"> Register </button>&nbsp;\n                <a class=\"btn rounded-btn\" [routerLink]=\"['/login']\"> Return </a>\n            </form>\n        </div>\n    </div>\n</div>\n\n<app-popup *ngIf=\"failSignup\"[type]=\"'danger'\" [message]=\"message\"></app-popup>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { routerTransition } from '../router.animations';\nimport { NgForm } from '@angular/forms';\n\nimport { AuthService } from '../shared/services/auth/auth.service';\nimport { User } from '../shared/models';\n\n@Component({\n    selector: 'app-signup',\n    templateUrl: './signup.component.html',\n    styleUrls: ['./signup.component.scss'],\n    animations: [routerTransition()]\n})\nexport class SignupComponent implements OnInit {\n\n    user: User = new User();\n    failSignup: boolean = false;\n    message: string;\n\n    constructor(public router: Router, public auth: AuthService) {}\n\n    ngOnInit() {}\n\n    onSingup(form: NgForm) {\n        this.auth.signUp(this.user).subscribe(\n            data => this.proccessSignup(),\n            error => this.setFailSignup(error)\n        );\n    }\n\n    proccessSignup() {\n        this.router.navigate(['/login']);\n    }\n\n    setFailSignup(error){\n        this.failSignup = true;\n        this.message = \"Este error viene del server, pero supongo que el \"+\n        \"unico error que puede haber es que el usuario este registrando otro usuario\"+\n        \" con un mail ya registrado\"\n        //error.info; //info de error. que dira que el usuario ya existe...\n        console.log(error);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SignupRoutingModule } from './signup-routing.module';\nimport { SignupComponent } from './signup.component';\nimport { PopupModule } from '../shared';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SignupRoutingModule,\n    PopupModule\n  ],\n  declarations: [SignupComponent]\n})\nexport class SignupModule { }\n"],"sourceRoot":""}