{"version":3,"sources":["webpack:///./src/app/layout/posts/posts-add-edit/posts-add-edit-routing.module.ts","webpack:///./src/app/layout/posts/posts-add-edit/posts-add-edit.component.html","webpack:///./src/app/layout/posts/posts-add-edit/posts-add-edit.component.ts","webpack:///./src/app/layout/posts/posts-add-edit/posts-add-edit.module.ts","webpack:///./src/app/shared/resolves/posts-find-resolver.ts"],"names":[],"mappings":"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","file":"posts-posts-add-edit-posts-add-edit-module-ngfactory.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PostsAddEditComponent } from './posts-add-edit.component';\nimport { FormsModule }   from '@angular/forms';\nimport { PostsFindResolver } from '../../../shared/resolves/posts-find-resolver'\n\nconst routes: Routes = [\n    {\n        path: '', component: PostsAddEditComponent, resolve: {post : PostsFindResolver}\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule,FormsModule],\n    providers: [PostsFindResolver]\n})\nexport class PostsAddEditRoutingModule {\n}\n","<div class=\"col-md-12\">\n    <h2 class=\"title\">{{ 'posts.edit' | translate }}</h2>\n\t<div class=\"container\" [@routerTransition]>\n\n\t    <div class=\"row justify-content-md-center\">\n\t        <div class=\"col col-lg-12 input-panel shadow p-3 mb-5 rounded \">\n\n\t        <div class=\" \">\n\t            <form (ngSubmit)=\"save(postForm);\" #postForm=\"ngForm\" >\n\t                <div class=\"form-group\">\n\t                    <label class=\"col-md-12\" for=\"url\" translate=\"posts.url\"></label>\n\t                    <input  type=\"text\"\n\t                            class=\"form-control\" \n\t                            id=\"url\" name=\"url\" \n\t                            placeholder=\"Url\"\n\t                            [(ngModel)]=\"post.url\"\n\t\t\t\t\t\t\t\ttranslate=\"posts.url\"\n\t\t\t\t\t\t\t\tdisabled>\n\t                </div>\n\n\t                <div class=\"form-group\" style=\"margin-top:20px\">\n\t                    <label class=\"col-md-12\" for=\"site\" translate=\"posts.site\"></label>\n\t                    <input  type=\"text\"\n\t                            class=\"form-control\" \n\t                            id=\"site\" name=\"site\" \n\t                            placeholder=\"Site\"\n\t                            [(ngModel)]=\"post.site\"\n\t                            translate=\"posts.site\"\n\t\t\t\t\t\t\t\tdisabled>\n\t                </div>\n\n\t                <div class=\"form-group\" style=\"margin-top:20px\">\n\t                    <label class=\"col-md-12\" for=\"creation_date\" translate=\"posts.creationDate\"></label>\n\t                    <input  type=\"text\"\n\t                            class=\"form-control\" \n\t                            id=\"creation_date\" name=\"creation_date\" \n\t                            placeholder=\"creation_date\"\n\t                            [(ngModel)]=\"post.creation_date\"\n\t                            translate=\"posts.creationDate\"\n\t\t\t\t\t\t\t\tdisabled>\n\t                </div>\n\n\n\t                <div class=\"form-group\" style=\"margin-top:20px\">\n\t                    <label class=\"col-md-12\" for=\"content\" translate=\"posts.content\"></label>\n\t\t\t\t\t\t <textarea\tclass=\"form-control\" \n\t\t\t\t\t\t\t\t\trows=\"6\" \n\t\t\t\t\t\t\t\t\tid=\"content\" name=\"content\"\n\t\t\t\t\t\t\t\t\tclass=\"form-control\" \n\t\t\t\t\t\t\t\t\t[(ngModel)]=\"post.content\" \n\t\t\t\t\t\t\t\t\ttranslate=\"posts.creationDate\"\n\t\t\t\t\t\t\t\t\tdisabled> \n\t\t\t\t\t\t</textarea> \n\t                </div>\n\n\t                <div class=\"form-group\">\n\t                \t<label class=\"col-md-12\" translate=\"posts.tags\"></label>\n\t                \t<tag-input name=\"tags\" [(ngModel)]=\"post.tags\" modelAsStrings=\"true\" placeholder='Add Tag' \n      secondaryPlaceholder='Add Tag' theme='dark'></tag-input>\n\t                </div>\n\n\t                <button [routerLink]=\"['/posts']\" class=\"btn btn-secondary pull-right\">Cancelar</button>\n\t                <button type=\"submit\" style='margin-right: 5px' class=\"btn btn-primary pull-right\">Guardar Post</button>\n\t            </form>\n\n\t        </div>   \n\t     </div>    \n\t    </div>\n\n\t</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { routerTransition } from '../../../router.animations';\nimport { PostsService } from '../../../shared/services/posts/posts.service';\nimport { NgForm, ReactiveFormsModule} from '@angular/forms';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { switchMap } from 'rxjs/operators';\nimport { TagInputModule } from 'ngx-chips';\nimport { Post } from '../../../shared/models';\n\n@Component({\n    selector: 'app-posts',\n    templateUrl: './posts-add-edit.component.html',\n    styleUrls: ['./posts-add-edit.component.scss'],\n    providers: [\n      PostsService\n    ],\n    animations: [routerTransition()]\n})\nexport class PostsAddEditComponent implements OnInit {\n\n  post: Post = new Post();\n\n  constructor(\n    private postsService: PostsService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.route.data.subscribe((data) => this.post = data.post);\n    this.post.tags = this.post.tags.map(function(tag) {return tag.description});\n  }\n\n   save(postForm: NgForm){\n     console.log(this.post)\n      this.postsService.update(this.post.id,this.post).subscribe(\n        data => this.router.navigate(['/posts']),\n        error => alert(error)\n      );\n   }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TagInputModule } from 'ngx-chips';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { PostsAddEditRoutingModule } from './posts-add-edit-routing.module';\nimport { PostsAddEditComponent } from './posts-add-edit.component';\nimport { NgxSmartModalModule } from 'ngx-smart-modal';\n\n@NgModule({\n    imports: [\n    \tCommonModule, \n    \tPostsAddEditRoutingModule,\n    \tTagInputModule,\n    \tFormsModule,\n    \tReactiveFormsModule,\n    \tNgxSmartModalModule.forRoot(),\n    \tTranslateModule],\n    declarations: [PostsAddEditComponent],\n    bootstrap: [PostsAddEditComponent]\n})\nexport class PostsAddEditModule {}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { ActivatedRouteSnapshot } from '@angular/router';\nimport { PostsService } from '../services/posts/posts.service';\nimport { Post } from '../models/post';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class PostsFindResolver implements Resolve<Observable<Post>>{\n\n\tconstructor(private postsService: PostsService,private route: ActivatedRoute){}\n\n\tresolve(route: ActivatedRouteSnapshot): Observable<Post>{\n\t\treturn this.postsService.read((route.paramMap.get('id')));\n\t}\n}\n"],"sourceRoot":""}